[Numpy]
"Numerical Python" = 수치적 파이썬
= Python에서대규모 다차원 배열을 다룰 수 있게 도와주는 라이브러리.

Why? 왜 Numpy를 사용하는가? 
1. 데이터의 대부분은 숫자 배열(Numpy)로 볼 수 있다.
2. 반복문 없이 배열 처리 가능. 파이썬 리스트에 비해, 빠른 연산을 지원하고 메모리를 효율적으로 사용 가능하다.

[Numpy 사용하기]
lsit 배열 생성 및 출력 형태 확인
list_arr = list(range(5))
print(list_arr)          # [0, 1, 2, 3, 4] -> 콤마로 구분 
print(type(list_arr))    # <class 'list'>

import (불러오다) 키워드를 이용해서 numpy 불러오기
import numpy as np    # numpy 모듈 불러와서 "np" 별칭 부여
numpy 배열 생성 및 출력 형태 확인
ndarray = n차열의 배열(n-dimensional array)

import numpy as np
np_arr = np.array(range(5))
print(np.arr)            # [0 1 2 3 4] --> 공백으로 구분
print(type(np.arr))      #<class 'numpy.ndarray>

ex) numpy 배열 만들기
Numpy 라이브러리는 효율적인 데이터분석이 가능하도록 N차원의 배열 객체를 지원합니다.
Numpy의 배열은 파이썬의 list()보다도 빠른 연산과 효율적인 메모리 사용이 가능하기 때문에 빅데이터 분석 등에 널리쓰이는 매우 강력한 라이브러리라고 할 수 있습니다.
0부터 4까지 연속적인 숫자가 들어있는 배열을 만들어 array라는 배열에 저장.

import numpy as np

# 0부터 4까지 연속적인 숫자가 들어있는 배열을 만들어 봅시다!
array = np.array(range(5))
print(array)
