indexing : 인덱스로 값을 찾음.
slicing : 인덱스의 값으로 배열의 일부분을 가져옴.

Indexing & Slicing
배열의 인덱스를 활용하여 값을 찾아내거나 배열의 일부분을 가져올 수 있습니다. 이를 Indexing & Slicing이라 합니다.
x = np.arang(7)
print(x[3])  # 3
print(x[1:4]  # [1 2 3]

Boolean mask를 이용하여 원하는 값을 추출하는 것은 Boolean indexing이라 합니다.
x = np.arange(7)
print(x[x < 3])  # [0 1 2]
print(x[x % 2 == 0])  # [2 4 6]

배열의 각 요소 선택을 Index 배열을 전달하여 지정하는 방식은 Fancy indexing이라 합니다.
x = np.arange(7)
print(x[[1, 3, 5]]  # [1 3 5]

ex) Indexing을 통해 값 2를 answer1에 저장.
answer1 = matrix[0,1]

Slicing을 통해 매트릭스 일부인 9, 10을 가져와 answer2에 저장해보세요.
answer2 = matrix[2:, :2]

Boolean indexing을 통해 5보다 작은 수를 찾아 answer3에 저장해보세요.
answer3 = matrix[matrix < 5]

Fancy indexing을 통해 두 번째 행만 추출하여 answer4에 저장해보세요.
answer4 = matrix[[1]]

[답안]
import numpy as np

matrix = np.arange(1, 13, 1).reshape(3, 4)
print(matrix)

# 1. Indexing을 통해 값 2를 출력해보세요.
answer1 = matrix[0,1]

# 2. Slicing을 통해 매트릭스 일부인 9, 10을 가져와 출력해보세요.
answer2 = matrix[2:, :2]

# 3. Boolean indexing을 통해 5보다 작은 수를 찾아 출력해보세요.
answer3 = matrix[matrix < 5]

# 4. Fancy indexing을 통해 두 번째 행만 추출하여 출력해보세요.
answer4 = matrix[[1]]

# 위에서 구한 정답을 출력해봅시다.
print(answer1)
print(answer2)
print(answer3)
print(answer4)

[[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 11 12]]
2
[[ 9 10]]
[1 2 3 4]
[[5 6 7 8]]
